/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { map } from 'rxjs/operators';

import { BaseService } from '../base-service';
import { ApiConfiguration } from '../api-configuration';
import { StrictHttpResponse } from '../strict-http-response';

import { create } from '../fn/paie-controller/create';
import { Create$Params } from '../fn/paie-controller/create';
import { deletePaie } from '../fn/paie-controller/delete-paie';
import { DeletePaie$Params } from '../fn/paie-controller/delete-paie';
import { getAllPaies } from '../fn/paie-controller/get-all-paies';
import { GetAllPaies$Params } from '../fn/paie-controller/get-all-paies';
import { getPaie } from '../fn/paie-controller/get-paie';
import { GetPaie$Params } from '../fn/paie-controller/get-paie';
import { Paie } from '../models/paie';

@Injectable({ providedIn: 'root' })
export class PaieControllerService extends BaseService {
  constructor(config: ApiConfiguration, http: HttpClient) {
    super(config, http);
  }

  /** Path part for operation `getAllPaies()` */
  static readonly GetAllPaiesPath = '/paies';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `getAllPaies()` instead.
   *
   * This method doesn't expect any request body.
   */
  getAllPaies$Response(params?: GetAllPaies$Params, context?: HttpContext): Observable<StrictHttpResponse<Array<Paie>>> {
    return getAllPaies(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `getAllPaies$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  getAllPaies(params?: GetAllPaies$Params, context?: HttpContext): Observable<Array<Paie>> {
    return this.getAllPaies$Response(params, context).pipe(
      map((r: StrictHttpResponse<Array<Paie>>): Array<Paie> => r.body)
    );
  }

  /** Path part for operation `create()` */
  static readonly CreatePath = '/paies';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `create()` instead.
   *
   * This method sends `application/json` and handles request body of type `application/json`.
   */
  create$Response(params: Create$Params, context?: HttpContext): Observable<StrictHttpResponse<Paie>> {
    return create(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `create$Response()` instead.
   *
   * This method sends `application/json` and handles request body of type `application/json`.
   */
  create(params: Create$Params, context?: HttpContext): Observable<Paie> {
    return this.create$Response(params, context).pipe(
      map((r: StrictHttpResponse<Paie>): Paie => r.body)
    );
  }

  /** Path part for operation `getPaie()` */
  static readonly GetPaiePath = '/paies/{paie-id}';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `getPaie()` instead.
   *
   * This method doesn't expect any request body.
   */
  getPaie$Response(params: GetPaie$Params, context?: HttpContext): Observable<StrictHttpResponse<Paie>> {
    return getPaie(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `getPaie$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  getPaie(params: GetPaie$Params, context?: HttpContext): Observable<Paie> {
    return this.getPaie$Response(params, context).pipe(
      map((r: StrictHttpResponse<Paie>): Paie => r.body)
    );
  }

  /** Path part for operation `deletePaie()` */
  static readonly DeletePaiePath = '/paies/{paie-id}';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `deletePaie()` instead.
   *
   * This method doesn't expect any request body.
   */
  deletePaie$Response(params: DeletePaie$Params, context?: HttpContext): Observable<StrictHttpResponse<void>> {
    return deletePaie(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `deletePaie$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  deletePaie(params: DeletePaie$Params, context?: HttpContext): Observable<void> {
    return this.deletePaie$Response(params, context).pipe(
      map((r: StrictHttpResponse<void>): void => r.body)
    );
  }

}
